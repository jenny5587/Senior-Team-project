# -*- coding: utf-8 -*-
"""지도 시각화.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KjiRdZ71KGDFMSSx-vzBXwu878kh-FPw

# Imports
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# 시각화시 한국어가 보이도록 설치
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

# 코렙 한글깨짐
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf
# 코렙에서 한글 깨짐 현상 있을때 설치 후 밑코드로 해결완료

plt.rc('font', family='NanumBarunGothic')

final = '/content/drive/MyDrive/시소프로젝트/완성데이터/디지털지수포함_449.csv'

final = pd.read_csv(final)

final

sns.heatmap(final.isnull(), yticklabels=False, cbar=False, cmap='viridis')
plt.show()

def Draw_Pie(x):
    plt.pie(x=x, labels=['없음', '있음'], autopct='%.2f%%')
    plt.show()

final.shape

final.head(3)

final[final['자치구'] == '종로구']

final.columns

final

final.sort_values(by='합계', ascending=False).head()

# 구청과 주민센터가 각각 1개씩 있으므로 2개로 나옴.
final['동'].value_counts()

final.columns

"""## 인구 시각화"""

v = final[['동','합계','독거노인포함','일반','65세이상고령자','전연령별독거노인비율','노인인구별독거노인비율']]
v.head()

v

# 인구가 많은 위주로 시각화
import folium

geo_json = 'https://github.com/southkorea/seoul-maps/raw/master/kostat/2013/json/seoul_submunicipalities_geo_simple.json'

m = folium.Map(
    location=[37.566345, 126.977893],
    tiles='cartodbpositron',
    zoom_start=11,
    width=700,
    height=700
)

# 동별 독거노인 인구 수
folium.Choropleth(
    geo_data=geo_json,
    data= v,
    columns=['동', '합계'],
    key_on='feature.properties.name',
    fill_color='YlOrRd',
    fill_opacity=0.5,
    line_opacity=0.2,
).add_to(m)
m

"""## 병원 시각화"""

final.병원수.value_counts()

hosp_1=final[final['병원수']==2]
hosp_1

# 병원이 근처에 있는 주민센터 위치 시각화
import folium

geo_json = 'https://github.com/southkorea/seoul-maps/raw/master/kostat/2013/json/seoul_submunicipalities_geo_simple.json'

m = folium.Map(
    location=[37.566345, 126.977893],
    tiles='cartodbpositron',
    zoom_start=11,
    width=700,
    height=700
)

# 동별 독거노인 인구 수
folium.Choropleth(
    geo_data=geo_json,
    data= v,
    columns=['동', '합계'],
    key_on='feature.properties.name',
    fill_color='YlOrRd',
    fill_opacity=0.5,
    line_opacity=0.2,
).add_to(m)

for i in hosp_1.index:
    folium.Circle(
        radius=500,
        location=[hosp_1['X'][i], hosp_1['Y'][i]],
        popup=hosp_1['센터명'][i],
        fill=True,
    ).add_to(m)
m

"""## 공원 시각화"""

final.공원수.value_counts()

park_1 = final[final['공원수']==2]
park_1

# 공원이 근처에 있는 주민센터 위치 시각화
import folium

geo_json = 'https://github.com/southkorea/seoul-maps/raw/master/kostat/2013/json/seoul_submunicipalities_geo_simple.json'

m = folium.Map(
    location=[37.566345, 126.977893],
    tiles='Stamen Terrain',
    zoom_start=10.5,
    width=700,
    height=700
)

# 동별 독거노인 인구 수
folium.Choropleth(
    geo_data=geo_json,
    data= v,
    columns=['동', '합계'],
    key_on='feature.properties.name',
    fill_color='YlOrRd',
    fill_opacity=0.5,
    line_opacity=0.2,
).add_to(m)

for i in park_1.index:
    folium.Circle(
        radius=350,
        location=[park_1['X'][i], park_1['Y'][i]],
        popup=park_1['센터명'][i],
        fill=True,
        color='red'
    ).add_to(m)
m